## Gráfico Ridge de área 

# library
library(ggridges)
library(ggplot2)
library(viridis)
library(hrbrthemes)

# Plot
ggplot(dataset, aes(x = `Mean Temperature [F]`, y = `Month`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE in 2016') +
theme_ipsum() +
theme( legend.position="none",  panel.spacing = unit(0.1,"lines"),
strip.text.x = element_text(size = 8))

## Gráfico Ridge stepped 

# library
library(ggridges)
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)


# Plot
dataset %>%
mutate( text = fct_reorder(text, value)) %>%
ggplot( aes(y=text, x=value,fill=text)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=20) +
theme_ridges() +
theme(legend.position="none",
      		panel.spacing = unit(0.1, "lines"),
      		strip.text.x = element_text(size = 8)) +
xlab("") +
ylab("Assigned Probability (%)")

## Gráfico de violín con caja

# Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
library(viridis)

# sample size
sample_size = data %>% 
group_by(name) %>% 
summarize(num=n()) 

# Plot
dataset %>%
left_join(sample_size) %>%
mutate(myaxis = paste0(name, "\n", "n=", num)) %>%
ggplot( aes(x=myaxis, y=value, fill=name)) +
geom_violin(width=1.4) +
geom_boxplot(width=0.1, color="grey", alpha=0.2) +
scale_fill_viridis(discrete = TRUE) +
theme_ipsum() +
theme( legend.position="none", plot.title = element_text(size=11)) +
ggtitle("A Violin wrapping a boxplot") +
xlab("”)


## Regresión múltiple 

library(tidyverse)

p <- ggplot( dataset, 
aes( x = compactness_se, y = fractal_dimension_mean, color = diagnosis)) +
geom_point() +
geom_smooth( method = "gam", se = T) +
labs(	x = "Media de Compactacion", 
 		y = "Media de dimension Fractal", 
 		title = "Correlacion multiple")

plot(p)

## Gráfico de caja con dispersión 

library(tidyverse)
library(hrbrthemes)
library(viridis)

# Grafico
dataset %>%
  ggplot( aes(x=name, y=value, fill=name)) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.6) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
theme_ipsum() +
theme(legend.position="none",plot.title = element_text(size=11)) +
ggtitle("Grafico de caja con dispersion") +
xlab("")

## Gráfico de correlación (variables continuas y categóricas) 

library(GGally)
library(tidyverse)
 
ggpairs(dataset, columns = 2:4, ggplot2::aes(colour=species)) 

## Correlograma (variables continuas)

library(corrgram)
corrgram(dataset, order = TRUE, lower.panel = panel.shade, upper.panel = panel.pie, text.panel = panel.txt, main = "Correlograma de vehiculos")

## Correlograma compuesto (variables continuas y categóricas) 

library(tidyverse)
library(GGally)

ggpairs(dataset,
    upper = list(continuous = "density", combo = "box_no_facet"),
    lower = list(continuous = "points", combo = "dot_no_facet"))

## Distribución marginal

library(tidyverse)
library(ggExtra)

p <- ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point() +
geom_smooth() +
theme(legend.position = "none")

p1 <- ggMarginal(p, type = "histogram")
# tambien se puede usar con "density" o con "boxplot"

Plot(p1)

## Clustering o Dendrograma

library(tidyverse)

# creacion de clusters
dataset %>% dist() %>% hclust() %>% as.dendrogram() -> dend

# grafico, y aumento de los margenes
par(mar = c(7,3,1,1)) 
plot(dend)

## Doble dendrograma

library(tidyverse)
library(dendextend)

d1 <- dataset %>% dist() %>% hclust( method="average" ) %>% as.dendrogram()
d2 <- dataset %>% dist() %>% hclust( method="complete" ) %>% as.dendrogram()

dl <- dendlist(d1 %>% 
    			set("labels_col", value = c("skyblue", "orange", "grey"), k=3) %>%
    			set("branches_lty", 1) %>%
set("branches_k_color", value = c("skyblue", "orange", "grey"), k = 3),
d2 %>% set("labels_col", value = c("skyblue", "orange", "grey"), k=3) %>%
    set("branches_lty", 1) %>%
    set("branches_k_color", value = c("skyblue", "orange", "grey"), k = 3))

tanglegram(dl, common_subtrees_color_lines = FALSE, highlight_distinct_edges  = TRUE, highlight_branches_lwd=FALSE, margin_inner=7, lwd=2)

## Gráfico de densidad

library(tidyverse)

ggplot(dataset, aes(x=x, y=y) ) + 
stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")

## Barras circulares

library(tidyverse)

label_data <- dataset
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5)  
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
 
# Make the plot
p <- ggplot(dataset, aes(x=as.factor(id), y=value, fill=group)) +       
  	geom_bar(stat="identity", alpha=0.5) +
  	ylim(-100,120) +
  	theme_minimal() +
theme(legend.position = "none",axis.text = element_blank(), 
axis.title = element_blank(), panel.grid = element_blank(), 
plot.margin = unit(rep(-1,4), "cm")) +
  	coord_polar() + 
  	geom_text(data=label_data, aes(x=id, y=value+10, 
label=individual, hjust=hjust), color="black", fontface="bold",
alpha=0.6,size=2.5, angle= label_data$angle, inherit.aes = FALSE ) 
 
p

## Coordenadas paralelas

library(tidyverse)
library(GGally)

ggparcoord(dataset, groupColumn = 5, showPoints = TRUE, alphaLines = 0.3, 
title = "Coordinadas Paralelas de Iris") 

## Visualización de forecast con Prophet
# Formato fecha ISO de Power BI

library(tidyverse)
library(prophet)

# renombrar dataset a df
dataset$ds <-  as.Date(dataset$ds) 
df <- dataset
# crear algoritmo prophet 
m <- prophet(df)
future <- make_future_dataframe(m, periods = 365, freq = 'day', include_history = TRUE)
forecast <- predict(m, future)
plot(m, forecast)

# Formato fecha nativo
library(tidyverse)
library(prophet)

dataset$fecha <- as.Date(dataset$fecha, format = "%Y-%m-%d")

df <- dataset %>% mutate( ds = fecha, y = ingresos)

m <- prophet(df)
fut <- make_future_dataframe(m, periods = 180, include_history = TRUE)
fcst <- predict(m, fut)
plot(m, fcst)

# visualización de tendencias
library(tidyverse)
library(prophet)

# renombrar dataset a df
dataset$ds <-  as.Date(dataset$ds) 
df <- dataset
# crear algoritmo prophet 
m <- prophet(df)
future <- make_future_dataframe(m, periods = 365, freq = 'day', include_history = TRUE)
forecast <- predict(m, future)

prophet_plot_components(m, forecast)

## Gráfico de lollipop

library(tidyverse)
library(hrbrthemes)

data <- dataset %>% 
  rowwise() %>% 
  mutate( mymean = mean(c(value1,value2) )) %>% 
  arrange(mymean) %>% 
  mutate(x=factor(x, x))

ggplot(data) +
  geom_segment( aes(x=x, xend=x, y=value1, yend=value2), color="grey") +
  geom_point( aes(x=x, y=value1), color=rgb(0.2,0.7,0.1,0.5), size=3 ) +
  geom_point( aes(x=x, y=value2), color=rgb(0.7,0.2,0.1,0.5), size=3 ) +
  coord_flip()+
  theme_ipsum() +
  theme(legend.position = "none") +
  xlab("") +
  ylab("Valor de Y")

## Anotaciones en gráficos

library(tidyverse)

p <- ggplot(dataset, aes(x=x, y=y)) +
  geom_segment( aes(x=x, xend=x, y=0, yend=y ), color=ifelse(dataset$x %in% c("A","D"), "orange", "grey"), size=ifelse(dataset$x %in% c("A","D"), 1.3, 0.7) ) +
  geom_point( color=ifelse(dataset$x %in% c("A","D"), "orange", "grey"), size=ifelse(dataset$x %in% c("A","D"), 5, 2) ) +
  coord_flip() +
  theme(legend.position="none") +
  xlab("") +
  ylab("Valor de Y") +
  ggtitle("Como progresan los equipos A y D?") +
annotate("text", x=grep("D", dataset$x), y=dataset$y[which(dataset$x=="D")]*1.2, 
           label="Grupo D avanza muy bien", 
           color="orange", size=4 , angle=0, fontface="bold", hjust=0) + annotate("text", x = grep("A", dataset$x), y =dataset$y[which(dataset$x=="A")]*1.2, 
label = paste("Group A no esta nada mal\n (val=",dataset$y[which(dataset$x=="A")] %>% round(2),")",sep="" ),                color="orange", size=4 , angle=0, fontface="bold", hjust=0) 

p

## Formato condicional de color

library(tidyverse)

data <- dataset %>% 
        mutate(mycolor = ifelse(y > 0, "type1", "type2"))

ggplot(data, aes(x = x, y = y)) +
  geom_segment(aes(x = x, xend = x, y = 0, yend = y, color = mycolor), size=1.3, alpha = 0.9) +
  theme_light() +
  theme(legend.position = "none", panel.border = element_blank()) +
  xlab("Valor de X") +
  ylab("Valor de Y")

## Líneas y áreas de color

library(tidyverse)
library(reshape2)
library(scales)

data <- dataset
data$Timeline <- as.Date(data$Timeline, format = "%Y-%m-%d")

ggplot(data, aes(x = Timeline, y = Price)) +
  geom_line(aes(col = variable)) + geom_ribbon(aes(ymin = min, ymax = Price, fill = variable), alpha = 0.3) +
  scale_color_manual(values = c("#144A90","#D81F26")) + 
  scale_fill_manual(values = c("#F7A396","#88CADD")) + 
  theme_get() + theme(legend.position="top", legend.title=element_blank()) +
  scale_x_date(labels=date_format("%b%y"))
